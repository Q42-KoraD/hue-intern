on:
  pull_request:
    types: [closed]

  # workflow_run:
  #   workflows: ["SonarCloud analysis"]
  #   types:
  #     - completed

jobs:
  Build-and-push-to-GCC:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    env:
      IMAGE_NAME: hue-intern
      PROJECT_ID: stage-kora-dokbua
      REGION: europe-west4
      GAR_LOCATION: europe-west4-docker.pkg.dev/stage-kora-dokbua/hue-intern
      SHA: ${{ github.sha }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: authenticate to GAR
        run: gcloud auth configure-docker \europe-west4-docker.pkg.dev

      - uses: google-github-actions/setup-gcloud@v2.1.0
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev/stage-kora-dokbua/hue-intern --quiet

      - name: Build image
        run: docker build -t hue-intern .

      - name: Docker tag
        run: docker tag hue-intern ${{ env.GAR_LOCATION }}/hue-intern:${{ env.SHA }}

      - name: Push Docker Image to Artifact Registry
        run: docker push ${{ env.GAR_LOCATION }}/hue-intern:${{ env.SHA}}

      - name: Update the GitOps repository
        run: |
          cd kubernetes
          git clone https://${{ secrets.NAME }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/Q42-KoraD/GitOps.git
          cd /home/runner/work/hue-intern/hue-intern/GitOps
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.NAME }}"
          git remote set-url origin https://${{ secrets.NAME }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/Q42-KoraD/GitOps.git
          sed -i 's/latest/${{ env.SHA }}/g' deploy.yaml
          git add -A
          git commit -m "update GitOps repo"
          git push --set-upstream origin master
        # Copy the deploymentfiles
        
        
        # Push it to the GitOps repo




          
        


